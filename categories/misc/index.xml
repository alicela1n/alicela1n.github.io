<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>misc on Alices Digital Notebook</title><link>https://alicela1n.github.io/categories/misc/</link><description>Recent content in misc on Alices Digital Notebook</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 03 Jan 2022 15:55:34 -0800</lastBuildDate><atom:link href="https://alicela1n.github.io/categories/misc/index.xml" rel="self" type="application/rss+xml"/><item><title>The Paradox Of Backwards Compatibility</title><link>https://alicela1n.github.io/post/2022-01-03-the-paradox-of-backwards-compatibility/</link><pubDate>Mon, 03 Jan 2022 15:55:34 -0800</pubDate><guid>https://alicela1n.github.io/post/2022-01-03-the-paradox-of-backwards-compatibility/</guid><description>Backwards compatibility is a mess Backwards compatibility is a mess. There&amp;rsquo;s not any other way to put it. You can either have an operating system that&amp;rsquo;s backwards compatible to a point where it&amp;rsquo;s inflexible in trying to make any changes because those changes could break compatibility with older software. You can have an operating system that is backwards compatible to a certain point, but after that point older software will no longer be supported, or you can have an operating system that isn&amp;rsquo;t backwards compatible at all, in which all software has to be updated to support the changes made to each release of the operating system.</description></item><item><title>Tegra 3 unbricking notes</title><link>https://alicela1n.github.io/post/2021-02-05-tegra-3-unbrick-notes/</link><pubDate>Fri, 05 Feb 2021 15:09:34 -0800</pubDate><guid>https://alicela1n.github.io/post/2021-02-05-tegra-3-unbrick-notes/</guid><description>This is just a quick little post to keep notes for how I unbricked my ASUS MemoPad ME301T.
Tegra 3 unbricking Using tegra 3 unbrick I managed to unbrick the MemoPad.
Enter APX mode Different depending on device.
Pwning the bootrom # ./fusee-launcher/fusee-launcher.py ./payload/uart_payload_n7.bin -P 7330 Is your BCT Good? If you don&amp;rsquo;t have a Nexus 7 or Ouya you&amp;rsquo;ll need a BCT. You can dump it with:
# ./utils/nvflash_v1.13.87205 --getbct --bct BCT_READBACK_N7.</description></item><item><title>Make your own dotfiles repo today</title><link>https://alicela1n.github.io/post/2020-10-31-make-your-own-dotfiles-repo/</link><pubDate>Sat, 31 Oct 2020 12:15:00 -0800</pubDate><guid>https://alicela1n.github.io/post/2020-10-31-make-your-own-dotfiles-repo/</guid><description>Introduction Dotfiles, we all love them. If you&amp;rsquo;re anything like me and use the command line a lot you surely use dotfiles. Things like your vimrc, zshrc, tmux config, etc are all dotfiles.
So why should you make a repo with your dotfiles? A github repo including all your dotfiles makes it easier to deploy them later, also makes it possible for other people to use them. I get asked occasionally, &amp;ldquo;how did you make your setup look like that?</description></item><item><title>Operating systems to use on old computers in 2020</title><link>https://alicela1n.github.io/post/2020-06-02-using-old-computers-in-2020/</link><pubDate>Tue, 02 Jun 2020 16:15:34 -0800</pubDate><guid>https://alicela1n.github.io/post/2020-06-02-using-old-computers-in-2020/</guid><description>Introduction Here&amp;rsquo;s a hypothetical situation, imagine you are using your computer and suddenly it stops powering on. No apparent reason, it just simply doesn&amp;rsquo;t work anymore. However you do have a Pentium 4 computer sitting in your closet collecting dust. So being that it&amp;rsquo;s your only functional computer, you plug it in and power it up. It runs an operating system from many years ago, Windows XP or an old Linux distro probably.</description></item><item><title>Taking a look at ReactOS, a real open source Windows XP replacement?</title><link>https://alicela1n.github.io/post/2020-05-14-taking-a-look-at-reactos/</link><pubDate>Thu, 14 May 2020 11:16:30 -0800</pubDate><guid>https://alicela1n.github.io/post/2020-05-14-taking-a-look-at-reactos/</guid><description>Introduction I got bored and decided to check out ReactOS, an open source alternative to Windows. It is the effort of a team who did some clean room reverse engineering of Windows and wrote their code from scratch.
Impressions ReactOS is quite good for what it is, it is quite unstable and has poor hardware support but that is to be expected. I got it to boot on a couple computers laying around the house but I couldn&amp;rsquo;t get the drivers to install.</description></item><item><title>How I triple booted my MacBook Pro</title><link>https://alicela1n.github.io/post/2019-12-01-how-i-triplebooted-my-macbook-pro/</link><pubDate>Sun, 01 Dec 2019 15:09:34 -0800</pubDate><guid>https://alicela1n.github.io/post/2019-12-01-how-i-triplebooted-my-macbook-pro/</guid><description>Introduction Important: This has only been tested on the MacBook7,1 and MacBook Pro7,1 and I take no responsibility if something goes wrong! So I&amp;rsquo;ve been thinking about doing this for quite a long time. You may think well it&amp;rsquo;s just a MacBook so it can&amp;rsquo;t possibly be that hard, I mean PCs have been doing this for years. Well yes and no. Before I explain why let me just tell you a bit of back story to why I needed to do this, I&amp;rsquo;ve basically been in a situation where I need to use Windows while on the go (yes it&amp;rsquo;s rare but sometimes happens).</description></item></channel></rss>